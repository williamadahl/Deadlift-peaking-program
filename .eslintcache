[{"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\index.js":"1","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\reportWebVitals.js":"2","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\App.js":"3","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\index.js":"4","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\data\\data.js":"5","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Navbar.js":"6","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block1.js":"7","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block2.js":"8","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block3.js":"9","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Home.js":"10","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block4.js":"11","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Week.js":"12"},{"size":500,"mtime":499162500000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":171,"mtime":1611510175772,"results":"16","hashOfConfig":"14"},{"size":1692,"mtime":1611788195010,"results":"17","hashOfConfig":"14"},{"size":3847,"mtime":1611780779858,"results":"18","hashOfConfig":"14"},{"size":708,"mtime":1611781531360,"results":"19","hashOfConfig":"14"},{"size":2776,"mtime":1612042027564,"results":"20","hashOfConfig":"14"},{"size":1980,"mtime":1612121332144,"results":"21","hashOfConfig":"14"},{"size":620,"mtime":1611781308447,"results":"22","hashOfConfig":"14"},{"size":744,"mtime":1611788924659,"results":"23","hashOfConfig":"14"},{"size":605,"mtime":1611781833327,"results":"24","hashOfConfig":"14"},{"size":1567,"mtime":1612120873595,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"o4ei10",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\index.js",[],["55","56"],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\reportWebVitals.js",[],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\App.js",[],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\index.js",["57","58","59","60","61","62"],"import React, {useState} from 'react';\r\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport {data} from \"../data/data\";\r\n\r\n/* Pages */\r\n\r\nimport Navbar from './Navbar';\r\nimport Block1 from './Block1';\r\nimport Block2 from './Block2';\r\nimport Block3 from './Block3';\r\nimport Block4 from './Block4';\r\nimport Home from \"./Home\";\r\n\r\n\r\n\r\nconst calculateWeight = (exercise,weight) => {\r\n        // console.log(exercise, weight)\r\n        const weightToLift = exercise * weight;\r\n        return weightToLift/100;\r\n};\r\n\r\n\r\nconst Index = () =>{\r\n    const [exercises, setExercises] = useState(data);\r\n    const [weight, setWeight] = useState(1);\r\n    const [value, setValue] = useState(3);\r\n\r\n    const handleSubmit =(e) =>{\r\n        e.preventDefault();\r\n        if(weight){\r\n            setWeight(weight);\r\n        }\r\n    };\r\n    // const onChangeHandler = (value) => {\r\n    //     setValue(value.target.value);\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <Router>\r\n                <Switch>\r\n                    <Route exact path='/'>\r\n                        <Home/>\r\n                    </Route>\r\n                    <Route exact path='/block1'>\r\n                        <Block1 />\r\n                    </Route>\r\n                    <Route path='/block2'>\r\n                        <Block2/>\r\n                    </Route>\r\n                    <Route path='/block3'>\r\n                        <Block3/>\r\n                    </Route>\r\n                    <Route path='/maxAttempt'>\r\n                        <Block4/>\r\n                    </Route>\r\n                </Switch>\r\n            <Navbar/>\r\n            </Router>\r\n        </>\r\n    );\r\n};\r\nexport default Index;","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\data\\data.js",[],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Navbar.js",[],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block1.js",["63","64","65","66","67","68","69"],"import React, {useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Route} from \"react-router-dom\";\r\nimport {data} from '../data/data'\r\n\r\nconst calculateWeight = (percentile,weight) => {\r\n    console.log(percentile, weight)\r\n    return (percentile*weight) /100;\r\n    // const weightToLift = exercise * weight;\r\n    // return weightToLift/100;\r\n};\r\n\r\nconst Block1 = (props) => {\r\n\r\n    const [exercises, setExercises] = useState(data[0]);\r\n    const [name, setName] = useState('');\r\n    const [showWeekOne, setShowWeekOne] = useState(false);\r\n    const [showWeekTwo, setShowWeekTwo] = useState(false);\r\n    const [showWeekThree, setShowWeekThree] = useState(false);\r\n    const [showWeekFour, setShowWeekFour] = useState(false);\r\n    const [weight, setWeight] = useState(250); // Remember to update this weight to be 80% of input\r\n    const [repNumber, setRepNumber] = useState(5);\r\n    const weightIncreasePerRepOverTarget = 2.5;\r\n\r\n    console.log(weight);\r\n\r\n    return(\r\n        <>\r\n            <h1> Block 1 </h1>\r\n            <h4> Reps managed {repNumber}</h4>\r\n            <button className='btn' onClick={()=>setShowWeekOne(!showWeekOne)}> Week 1</button>\r\n            <button className='btn' onClick={()=>setShowWeekTwo(!showWeekTwo)}> Week 2</button>\r\n            <button className='btn' onClick={()=>setShowWeekThree(!showWeekThree)}> Week 3</button>\r\n            <button className='btn' onClick={()=>setShowWeekFour(!showWeekFour)}> Week 4</button>\r\n            {showWeekOne && <>\r\n                <h2>Week 1</h2>\r\n            {/*<input*/}\r\n            {/*    type='text'*/}\r\n            {/*    placeholder='hello from block1'*/}\r\n            {/*    onChange={event => props.onChange(event.target.value) && setName(event.target.value)}*/}\r\n            {/*    // onChange={setName('test')}*/}\r\n            {/*/>*/}\r\n            {exercises.map((exercise) => {\r\n                const {id, fields} = exercise;\r\n                return (\r\n                <div key = {id} className='item'>\r\n                <h4>{fields.name}</h4>\r\n                <p>Sets/Reps: {fields.sets} x {fields.reps}</p>\r\n                    <p>Weight: {calculateWeight(fields.percentile, weight)}</p>\r\n                </div>\r\n                );\r\n            })}\r\n            <form className='form'>\r\n                <div className='form-control'>\r\n                    <label htmlFor='repNumber'>Enter number of reps: </label>\r\n                        <input\r\n                            type='number'\r\n                            value={repNumber}\r\n                            onChange={(e) => setRepNumber(parseInt(e.target.value))}\r\n                        />\r\n                </div>\r\n            </form>\r\n            </>\r\n            }\r\n</>\r\n    );\r\n};\r\nexport default Block1;","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block2.js",["70","71"],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block3.js",["72"],"import React, {useState} from 'react';\r\nimport {data} from '../data/data'\r\n\r\nconst Block3 = () => {\r\n    const [exercises, setExercises] = useState(data[2])\r\n    return(\r\n        <>\r\n            <h1> Block 3 </h1>\r\n            {exercises.map((exercise) =>{\r\n                const {id, fields} = exercise;\r\n                return (\r\n                    <div key={id} className='item'>\r\n                        <h4>{fields.name}</h4>\r\n                        <p>Sets/Reps: {fields.sets} x {fields.reps}</p>\r\n                    </div>\r\n                )\r\n            })}\r\n        </>\r\n\r\n    )\r\n};\r\nexport default Block3;\r\n","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Home.js",[],"C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Block4.js",["73"],"import React, {useState} from 'react';\r\nimport {data} from '../data/data';\r\n\r\nconst Block4 = () => {\r\n    const [exercises, setExercises] = useState(data[3]);\r\n    return(\r\n        <>\r\n            <h1> Max attempt</h1>\r\n            {exercises.map((exercise) => {\r\n                const{id, fields} = exercise;\r\n                return (\r\n                <div key={id} className='item'>\r\n                    <h4>{fields.name}</h4>\r\n                    <p>Sets/Reps: {fields.sets} x {fields.reps}</p>\r\n                </div>\r\n            )\r\n            })}\r\n        </>\r\n\r\n    )\r\n};\r\nexport default Block4;\r\n","C:\\Users\\willid\\Documents\\Projects\\deadlift-peaking-program\\src\\tmp-folder\\Week.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":16,"column":7,"nodeType":"80","messageId":"81","endLine":16,"endColumn":22},{"ruleId":"78","severity":1,"message":"82","line":24,"column":12,"nodeType":"80","messageId":"81","endLine":24,"endColumn":21},{"ruleId":"78","severity":1,"message":"83","line":24,"column":23,"nodeType":"80","messageId":"81","endLine":24,"endColumn":35},{"ruleId":"78","severity":1,"message":"84","line":26,"column":12,"nodeType":"80","messageId":"81","endLine":26,"endColumn":17},{"ruleId":"78","severity":1,"message":"85","line":26,"column":19,"nodeType":"80","messageId":"81","endLine":26,"endColumn":27},{"ruleId":"78","severity":1,"message":"86","line":28,"column":11,"nodeType":"80","messageId":"81","endLine":28,"endColumn":23},{"ruleId":"78","severity":1,"message":"87","line":2,"column":9,"nodeType":"80","messageId":"81","endLine":2,"endColumn":13},{"ruleId":"78","severity":1,"message":"88","line":3,"column":9,"nodeType":"80","messageId":"81","endLine":3,"endColumn":14},{"ruleId":"78","severity":1,"message":"83","line":15,"column":23,"nodeType":"80","messageId":"81","endLine":15,"endColumn":35},{"ruleId":"78","severity":1,"message":"89","line":16,"column":12,"nodeType":"80","messageId":"81","endLine":16,"endColumn":16},{"ruleId":"78","severity":1,"message":"90","line":16,"column":18,"nodeType":"80","messageId":"81","endLine":16,"endColumn":25},{"ruleId":"78","severity":1,"message":"91","line":21,"column":20,"nodeType":"80","messageId":"81","endLine":21,"endColumn":29},{"ruleId":"78","severity":1,"message":"92","line":23,"column":11,"nodeType":"80","messageId":"81","endLine":23,"endColumn":41},{"ruleId":"78","severity":1,"message":"83","line":14,"column":23,"nodeType":"80","messageId":"81","endLine":14,"endColumn":35},{"ruleId":"78","severity":1,"message":"93","line":19,"column":24,"nodeType":"80","messageId":"81","endLine":19,"endColumn":37},{"ruleId":"78","severity":1,"message":"83","line":5,"column":23,"nodeType":"80","messageId":"81","endLine":5,"endColumn":35},{"ruleId":"78","severity":1,"message":"83","line":5,"column":23,"nodeType":"80","messageId":"81","endLine":5,"endColumn":35},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'calculateWeight' is assigned a value but never used.","Identifier","unusedVar","'exercises' is assigned a value but never used.","'setExercises' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'name' is assigned a value but never used.","'setName' is assigned a value but never used.","'setWeight' is assigned a value but never used.","'weightIncreasePerRepOverTarget' is assigned a value but never used.","'setTargetReps' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]